{"version":3,"sources":["components/leftmenu/menudata.js","components/leftmenu/index.jsx","pages/home/infobox/index.jsx","utils/util.jsx","pages/home/index.jsx","pages/cases/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["name","menuData","title","key","path","icon","className","Sider","Layout","LeftMenu","mode","theme","map","item","Item","to","InfoBox","cases","total","props","Card","CardContent","style","backgroundColor","prettyPrintStat","stat","numeral","format","Home","canadaData","JSON","parse","localStorage","getItem","cumulative_cases","active_cases_change","active_cases","recovered","cumulative_recovered","deaths","cumulative_deaths","avaccine","cumulative_avaccine","cvaccine","cumulative_cvaccine","testing","cumulative_testing","Case","Header","Content","App","useEffect","fetch","then","response","json","data","provInfo","prov","slice","length","setItem","stringify","catch","error","console","log","filteredSummaryInfo","summary","filter","info","province","summaryInfo","margin","padding","minHeight","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c8022cb.chunk.js","sourcesContent":["import {AiOutlineHome} from 'react-icons/ai'\nimport {FaSyringe} from 'react-icons/fa'\nimport {BiPlusMedical} from 'react-icons/bi'\n\nconst name = \"menu-item\";\n\nexport const menuData = [\n\n    {\n        title: \"Home\",\n        key: 'home',\n        path: \"/\",\n        icon: <AiOutlineHome />,\n        className: name\n    },\n    {\n        title: \"Vaccine\",\n       key:'vaccine',\n       path: \"/vaccine\",\n       icon: <FaSyringe />,\n       className: name\n    },\n    {\n       title: \"Case\",\n       key:'case',\n       path: \"/case\",\n       icon: <BiPlusMedical />,\n       className: name\n   }\n\n]","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Layout, Menu} from 'antd'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport {menuData} from './menudata'\n\nconst {Sider} = Layout\n\nexport const LeftMenu = () => {\n    return (\n        <Sider className=\"sider\" >\n            <Menu mode=\"inline\" className=\"menu\" theme=\"light\">\n                {\n                    menuData.map((item) => {\n                        return (\n                            <Menu.Item key={item.key} icon={item.icon} >\n                                <Link to={item.path} className={item.className}>{item.title}</Link> \n                            </Menu.Item>\n                        )\n                    })\n                }\n            </Menu>\n        </Sider>\n    )\n}\n","import React from 'react'\nimport { Card, CardContent } from '@material-ui/core'\nimport './index.css'\n\nexport const InfoBox = ({title, cases, total, ...props}) => {\n    return (\n        <Card className=\"infoBox\">\n            <CardContent className=\"content\" style={{ backgroundColor : props.backgroundColor}} >\n                <h2 className=\"infoBox__title\">{title}</h2>\n                <h2 className=\"infoBox__cases\">{cases}</h2>\n                <h2 className=\"infoBox__cases\">{total} total</h2>\n            </CardContent>    \n        </Card>\n    )\n}\n","import numeral from 'numeral';\nexport const prettyPrintStat = (stat) =>\n   numeral(stat).format('0,0')","import React from 'react'\nimport './index.css'\nimport {InfoBox} from './infobox'\nimport {prettyPrintStat } from \"../../utils/util\";\n\nexport const Home = () => {\n\n    const canadaData = JSON.parse(localStorage.getItem('canadaData'));\n\n\n    return (\n    <div className=\"canada\">\n        <div className=\"app_stats\">\n            <InfoBox\n        backgroundColor=\"#266ac9\"\n        title=\"Total cases\"\n        cases={prettyPrintStat(canadaData[0].cases)+\"  new\"}\n        total={prettyPrintStat(canadaData[0].cumulative_cases)} />\n        \n       <InfoBox\n          title=\"Active cases\"\n          backgroundColor=\"purple\"\n          cases={prettyPrintStat(canadaData[0].active_cases_change)}\n          total={prettyPrintStat(canadaData[0].active_cases)} />\n        \n       <InfoBox\n          title=\"Total recovered\"\n          backgroundColor=\"#1bab52\"\n          cases={prettyPrintStat(canadaData[0].recovered)+\"  new\"}\n          total={prettyPrintStat(canadaData[0].cumulative_recovered)} />\n        \n       <InfoBox\n          title=\"Total deaths\"\n          backgroundColor=\"black\"\n       cases={prettyPrintStat(canadaData[0].deaths)+\"  new\"}\n          total={prettyPrintStat(canadaData[0].cumulative_deaths)} />\n        </div>\n      <div className=\"app_stats\">\n       <InfoBox\n          title=\"Vaccine doses administered\"\n          backgroundColor=\"#d40fb6\"\n       cases={prettyPrintStat(canadaData[0].avaccine)+\"  new\"}\n          total={prettyPrintStat(canadaData[0].cumulative_avaccine)} />\n      \n\n       <InfoBox\n          title=\"People fully vaccinated\"\n          backgroundColor=\"#50d60d\"\n          cases={prettyPrintStat(canadaData[0].cvaccine)+\"  new\"}\n          total={prettyPrintStat(canadaData[0].cumulative_cvaccine)} />\n        \n       <InfoBox\n        backgroundColor=\"#17b09e\"\n        title=\"Total testing\"\n        cases={prettyPrintStat(canadaData[0].testing)+\"  new\"}\n        total={prettyPrintStat(canadaData[0].cumulative_testing)} />\n            </div>\n        </div>\n\n\n    )\n}","import React from 'react'\n\nexport const Case = () => {\n    return (\n        <>\n        </>\n    )\n}","import React, { useEffect} from \"react\";\nimport { Layout} from 'antd';\nimport 'antd/dist/antd.css';\nimport {Switch,Route} from \"react-router-dom\"\nimport \"./index.css\";\nimport {LeftMenu} from \"./components/leftmenu\";\nimport {Home} from \"./pages/home\";\nimport {Case} from \"./pages/cases\";\nimport {Vaccine} from \"./pages/vaccine\";\n\n\nconst {Header, Content} = Layout;\nfunction App() {\n\n  useEffect(() => {\n      fetch('https://api.opencovid.ca/other?stat=prov')\n        .then(response => response.json())\n        .then(data => {\n            let provInfo = data.prov\n            provInfo = provInfo.slice(0, provInfo.length - 1)\n            localStorage.setItem(\"provinces\",JSON.stringify(provInfo));\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n\n     fetch(\"https://api.opencovid.ca/summary\")\n        .then(response => response.json())\n       .then(data => {\n         var summaryInfo = data.summary;\n         var filteredSummaryInfo = summaryInfo.filter((info)=>info.province!==\"Repatriated\");\n        localStorage.setItem(\"summary\",JSON.stringify(filteredSummaryInfo));\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n\n    \n     //get the all canada data\n     fetch(\"https://api.opencovid.ca/summary?loc=canada\")\n        .then(response => response.json())\n       .then(data => {\n         var summaryInfo = data.summary;\n        localStorage.setItem(\"canadaData\",JSON.stringify(summaryInfo));\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n  }, [])\n\n\n  return (\n    <>\n    <Layout>\n          {/* header */}\n          <Header className=\"header\">COVID-19 in USA</Header>\n            <Layout >\n              {/* left menu section */}\n              <LeftMenu/>\n              {/* center */}\n                <Layout className=\"site-layout\">\n                  <Content\n                    className=\"site-layout-background\"\n                    style={{\n                      margin: '24px 16px',\n                      padding: 24,\n                      minHeight: \"700px\",\n                    }}\n                  >\n                    <Switch>\n                      <Route path=\"/\" exact component={Home} />\n                      <Route path=\"/case\" component={Case} />\n                      <Route path=\"/vaccine\" component={Case} />\n                      \n                    </Switch>   \n\n                  </Content>\n              </Layout>\n            </Layout>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}